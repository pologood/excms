<div id="ui_layout" class="mini-layout" style="width:100%;height:100%;">
    <div region="center" style="border:none; overflow:auto;">
        <div class="portlet light">
            <div class="portlet-body form">
                <div class="table-toolbar">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="btn-group">
                                <button type="button" class="btn btn-default btn-add" onclick="addTask()">添加任务</button>
                            </div>
                            <div class="btn-group">
                                <button type="button" class="btn btn-default btn-delete" onclick="batchDel()">批量删除</button>
                            </div>
                        </div>
                        <div class="col-md-9">
                            <form class="form-inline tr search-toolbar" role="form">
                                <div class="form-group">
                                    <input type="text" id="ser_key" name="searchKey" class="form-control"
                                           placeholder="名称">
                                </div>
                                <button type="button" class="btn btn-default btn-search" onclick="search()">
                                    搜索
                                </button>
                                <button type="button" class="btn btn-default btn-show-all" onclick="showAll()">
                                    显示全部
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
                <div id="datagrid" class="mini-datagrid" allowCellSelect="false" onlyCheckSelection="true" allowResize="true"
                     url="/data/collect/getPageTaskEOs" sizeList="[5,10,20,50]" pageSize="10"
                     idField="id" multiSelect="true" showColumnsMenu="true" style="width:100%;"
                >
                    <div property="columns">
                        <div type="checkcolumn" headerAlign="center" width="50"></div>
                        <div field="" width="200" align="left" headerAlign="left" renderer="taskNameDiy">名称</div>
                        <div field="columnName" width="100%" align="left" headerAlign="center">所属栏目</div>
                    #*<div field="webDomain" width="30%" align="left" headerAlign="center">域名</div>
                    <div field="regexUrl" width="50%" align="left" headerAlign="center">网页地址规则</div>
                    <div field="" width="100" align="center" headerAlign="center" renderer="pageType">分页方式</div>
                    <div field="" width="50" align="center" headerAlign="center" renderer="pageBegin">开始页</div>
                    <div field="" width="50" align="center" headerAlign="center" renderer="pageEnd">结束页</div>*#
                        <div field="collectDate" width="150" align="center" headerAlign="center" dateFormat="yyyy-MM-dd HH:mm:ss">上次采集时间</div>

                        <div field="cronDesc" width="120" align="center" headerAlign="center" >触发器</div>
                        <div field="prevRunDate" width="130" align="center" headerAlign="center" dateFormat="yyyy-MM-dd HH:mm:ss">上次运行时间</div>
                        <div field="nextRunDate" width="130" align="center" headerAlign="center" dateFormat="yyyy-MM-dd HH:mm:ss">下次运行时间</div>
                        <div field="" width="50" align="center" headerAlign="center" renderer="runStatus">状态</div>
                        <div field="" width="70" align="center" headerAlign="center" renderer="employType">引用方式</div>
                        <div name="isPush" width="70" align="center" headerAlign="center" renderer="isPush">是否推送</div>
                        <div field="pushUrlFlag" width="70" align="center" headerAlign="center">推送标识</div>
                        <div field="" width="80" align="center" headerAlign="center" renderer="contentRule">内容规则</div>
                        <div field="" width="80" align="center" headerAlign="center" renderer="cronConf">定时配置</div>
                        <div width="80" align="center" headerAlign="center" allowSort="true" renderer="execCollect">采集操作</div>
                    ##                        <div width="80" name="loginfo" align="center" headerAlign="center" allowSort="true" renderer="collectLog" visible="false">采集日志</div>
                        <div width="230" align="center" headerAlign="center" allowSort="true" renderer="opt">操作</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    mini.parse();
    var cur = {
        grid: mini.get('datagrid'),
        ser_key: $('#ser_key'),
        dialog: Ls.getWin.dialog
    };

    /**
     * 初始化加载
     */
    $(document).ready(function () {
        Ls.mini_datagrid_height(cur.grid, 30);
        cur.grid.load({siteId: GLOBAL_SITEID});
    })

    /*
    * 添加采集任务
    * */
    function addTask() {
        cur.dialog.data("type", "add");
        Ls.openWin("/data/collect/addOrEditTask", '800px', '540px', {
            title: "添加网页采集规则"
        });
    }

    function editTask(id) {
        var record = cur.grid.findRow(function (row) {
            if (row.id == id) return true;
        });
        cur.dialog.data("type", "edit");
        cur.dialog.data("record", record);
        Ls.openWin("/data/collect/addOrEditTask", '800px', '540px', {
            title: "编辑网页采集规则"
        });
    }

    function batchDel(id) {
        var ids = [];

        if (id != null && id != "") {
            ids.push(id);
        } else {
            var records = cur.grid.getSelecteds();
            if ((null == records || records.length <= 0) && ids.length <= 0) {
                Ls.tipsInfo("请选择一条记录!");
                return;
            }
            for (var i = 0; i < records.length; i++) {
                ids.push(records[i].id);
            }
        }

        if (confirm('确定删除?')) {
            Ls.ajaxGet({
                url: "/data/collect/deleteTasks",
                data: {
                    "ids[]": ids
                },
                success: function (resp) {
                    if (resp.status == 1) {
                        showAll();
                        Ls.tips(resp.desc, {times: 2});
                    } else {
                        Ls.tips(resp.desc, {icons:"error",times: 2});
                    }
                }
            });
        }
    }

    function taskNameDiy(obj) {
        var record = obj.record;
        //webDomain,regexUrl,pageType,pageBegin,pageEnd
        var title = "域名:" + record.webDomain + "\n分页地址规则：" + record.regexUrl + "\n采集页数：" + record.pageBeginNumber + "-" + record.pageEndNumber;
        var diy = '<a title="' + title + '" id="' + record.id + '" href="javascript:;"  onclick="dataDetail(' + record.id + ',' + record.columnId + ',' + record.cSiteId + ')"><u>' + record.taskName + '</u></a>';
        return diy;
    }

    function isPush(obj) {
        var rec = obj.record;
        return rec.isPush == 1?"是":"否";
    }

    function dataDetail(id, columnId, cSiteId) {
        cur.dialog.data("taskId", id);
        cur.dialog.data("columnId", columnId);
        cur.dialog.data("cSiteId", cSiteId);
        Ls.openWin("/data/collect/dataDetail?taskId=" + id, '880px', '490px', {
            id: "content_data",
            title: "采集数据"
        });
    }

    function runStatus(obj) {
        var record = obj.record;
        if(record.runStatus == 0) {
            return "暂停";
        } else if(record.runStatus == 1) {
            return "正常";
        }
    }

    function employType(obj) {
        var record = obj.record;
        if(record.employType == "Manual") {
            return "手动";
        } else if(record.employType == "Auto") {
            return "自动";
        }
    }

    function contentRule(obj) {
        var record = obj.record;
        var edit = '<button type="button" class="btn btn-default btn-sm btn-edit" onclick="editContentRule(' + record.id + ')">配置规则</button> ';
        return edit;
    }

    function editContentRule(id) {
        cur.dialog.data("taskId", id);
        Ls.openWin("/data/collect/contentRule", '800px', '500px', {
            id: "content_rule",
            title: "编辑内容采集规则"
        });
    }
    
    function cronConf(obj) {

        var record = obj.record;
        var edit = '<button type="button" class="btn btn-default btn-sm btn-edit" onclick="taskCron(' + record.id + ',' + record.cronId +')">定时配置</button> ';
        return edit;
    }

    function taskCron(taskId,cronId) {
        cur.dialog.data("taskId", taskId);
        Ls.openWin("/data/collect/taskCron?cronId=" + (cronId == null?"":cronId), '600px', '270px', {
            id: "task_cron",
            title: "定时配置"
        });
    }

    function execTask(id, name) {
        showLog(name);
        $("#collect_task_" + id).hide();
        $("#collect_log_" + id).show();
        Ls.ajaxGet({
            url: "/data/collect/execTask",
            data: {
                id: id
            },
            success: function (resp) {
                if (resp.status == 1) {
                    $("#collect_task_" + id).show();
                    $("#collect_log_" + id).hide();
                    Ls.tips("采集完成!");
                } else {
                    Ls.tips(resp.desc, {icons: 'error'});
                }
            }
        });
    }

    function pageType(obj) {
        var record = obj.record;
        if (record.pageType == 'number') {
            return "数字分页";
        } else if (record.pageType == 'character') {
            return "字母分页";
        } else if (record.pageType == 'auto') {
            return "自定义";
        }
    }

    function pageBegin(obj) {
        var record = obj.record;
        if (record.pageType == 'number') {
            return record.pageBeginNumber;
        } else if (record.pageType == 'character') {
            return record.pageBeginChar;
        } else if (record.pageType == 'auto') {
            return "";
        }
    }

    function pageEnd(obj) {
        var record = obj.record;
        if (record.pageType == 'number') {
            return record.pageEndNumber;
        } else if (record.pageType == 'character') {
            return record.pageEndChar;
        } else if (record.pageType == 'auto') {
            return "";
        }
    }

    function execCollect(obj) {
        var record = obj.record;
        var collect = '<button id="collect_task_' + record.id + '" type="button" class="btn btn-default btn-sm btn-task" onclick="execTask(' + record.id + ',\'' + record.taskName + '\')">执行任务</button> ';
        var log = '<button id="collect_log_' + record.id + '" type="button" class="btn btn-info btn-sm btn-log" onclick="showLog(\'' + record.taskName + '\')">采集日志</button> ';
//        var collecting = "<div id='collect_ing_" + record.id + "' style='display: none'><font color='green'>采集中</font></div>";
        return collect + log;
    }

    function collectLog(obj) {
        var record = obj.record;
        var log = '<button type="button" class="btn btn-default btn-sm btn-edit" onclick="showLog(\'' + record.taskName + '\')">实时日志</button> ';
        return log;
    }

    function showLog(name) {
        Ls.openWin("/data/collect/showLog", '800px', '440px', {
            id: "log_collect",
            title: "采集实时日志(" + name + ")"
        });
    }

    function opt(obj) {
        var record = obj.record;
        var pause = '<button id="pause_' + record.id + '" type="button" class="btn btn-default btn-sm btn-edit" onclick="pauseTask('+record.id+')">暂停</button> ';
        var resume = '<button id="resume_' + record.id + '" type="button" class="btn btn-default btn-sm btn-edit" onclick="resumeTask('+record.id+')">恢复</button> ';
        var edit = '<button type="button" class="btn btn-default btn-sm btn-edit" onclick="editTask(' + record.id + ')">配置源</button> ';
        var copy = '<button type="button" class="btn btn-default btn-sm btn-edit" onclick="copyTask(' + record.id + ')">复 制</button> ';
        var del = '<button type="button" class="btn btn-default btn-sm btn-delete" onclick="batchDel(' + record.id + ')">删 除</button>';

        if(record.runStatus == 0) {
            return resume + edit + copy + del;
        } else {
            return pause + edit + copy + del;
        }
    }

    function pauseTask(id) {
        Ls.ajaxGet({
            url: "/data/collect/pauseTask",
            data: {
                taskId:id
            },
            success: function (resp) {
                if (resp.status == 1) {
                    Ls.tips("操作成功!");
                    showAll();
                } else {
                    Ls.tips("操作失败!",{icons:'error'});
                }
            }
        });
    }

    function resumeTask(id) {
        Ls.ajaxGet({
            url: "/data/collect/resumeTask",
            data: {
                taskId:id
            },
            success: function (resp) {
                if (resp.status == 1) {
                    Ls.tips("操作成功!");
                    showAll();
                } else {
                    Ls.tips("操作失败!",{icons:'error'});
                }
            }
        });
    }

    function copyTask(id) {
        var record = cur.grid.findRow(function (row) {
            if (row.id == id) return true;
        });
        record.taskName = "copy_" + record.taskName;
        cur.dialog.data("type", "copy");
        cur.dialog.data("record", record);
        Ls.openWin("/data/collect/addOrEditTask", '800px', '540px', {
            title: "编辑网页采集规则"
        });
    }

    function search() {
        var keyValue = cur.ser_key.val();
        cur.grid.load({siteId: GLOBAL_SITEID, keys: 'taskName', keyValue: keyValue});
    }

    function showAll() {
        cur.ser_key.val('');
        search();
    }

    function callback(msg) {
        Ls.tips(msg, {times: 2});
        search();
    }
</script>