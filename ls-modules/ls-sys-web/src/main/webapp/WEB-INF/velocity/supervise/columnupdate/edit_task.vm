#parse("_page_layout/_header.vm")
</head>
<body class="page-body-white">
    <div id="ui_layout" class="mini-layout" style="width:100%;height:100%;">
        <div region="center" style="border:none; overflow: auto;">
            <div class="portlet light" style="padding-left: 0">
                <div class="portlet-body form">
                    <form id="task_edit_form" role="form" ms-controller="task_edit_form">
                        <div class="form-body">
                            <table class="table table-bordered article-table" style="margin-bottom: 0px;">
                                <tr>
                                    <th>任务类型:</th>
                                    <td>
                                        <select id="taskType" class="form-control" name="taskType" ms-duplex="taskType">
                                        </select>
                                    </td>
                                </tr>
                                <tr>
                                    <th>任务名称:</th>
                                    <td>
                                        <input type="text" id="id" name="id" style="display: none" ms-duplex="id">
                                        <input type="text" id="cronId" name="cronId" style="display: none" ms-duplex="cronId">
                                        <input type="text" id="columnIds" name="columnIds" style="display: none" ms-duplex="columnIds">
                                        <input type="text" id="cSiteIds" name="cSiteIds" style="display: none" ms-duplex="cSiteIds">
                                        <input type="text" id="publicNames" name="publicNames" style="display: none" ms-duplex="publicNames">
                                        <input type="text" id="publicTypes" name="publicTypes" style="display: none" ms-duplex="publicTypes">
                                        <input type="text" id="organIds" name="organIds" style="display: none" ms-duplex="organIds">
                                        <input type="text" id="taskName" name="taskName" maxlength="50" class="form-control" data-rule="任务名称:required;taskName" placeholder="" ms-duplex="taskName">
                                    </td>
                                </tr>
                            </table>

                            <table class="table table-bordered article-table" style="margin-bottom: 0px;">
                                <tr>
                                    <th>触发周期:</th>
                                    <td>
                                        <div class="radio-group">
                                            <label class="radio-inline"><input type="radio" name="timeMode" value="day" onclick="changeMode('day')" ms-duplex-string="timeMode">天</label> &nbsp;&nbsp;
                                            <label class="radio-inline"><input type="radio" name="timeMode" value="auto" onclick="changeMode('auto')" ms-duplex-string="timeMode">自定义</label>
                                        </div>
                                    </td>
                                </tr>
                                <tr ms-visible="timeMode=='day'" class="dn">
                                    <th>开始时间:</th>
                                    <td>
                                        <div class="radio-group">
                                            <input type="datetime" id="startDate" name="startDate" ms-duplex="startDate" class="form-control readonly" placeholder="开始时间"
                                                   onfocus="WdatePicker({dateFmt:'yyyy-MM-dd HH:mm:ss'})" readonly>
                                        </div>
                                    </td>
                                </tr>
                                <tr ms-visible="timeMode=='day'" class="dn">
                                    <th ms-visible="timeMode=='day'">间隔(天):</th>
                                    <td>
                                        <input type="text" id="spaceOfDay" style="width:100%;" name="spaceOfDay" class="form-control" data-tip="" placeholder="" ms-duplex="spaceOfDay">
                                    </td>
                                </tr>
                                <tr ms-visible="timeMode=='auto'" class="dn">
                                    <th>选择定时:</th>
                                    <td>
                                        <select id="cronExpress" class="form-control" name="cronExpress">
                                        </select>
                                    </td>
                                </tr>
                                <tr style="width: 30px">
                                    <th>提醒方式:</th>
                                    <td>
                                        <label><input type="checkbox" class="readonly" checked disabled>系统提醒</label> &nbsp;&nbsp;
##                                        <label><input id="msgAlert" name="msgAlert" type="checkbox" value="checkbox" ms-duplex-radio="msgAlert"> 短信提醒<font color="red">(手机短信只提醒一次)</font></label>
                                    </td>
                                </tr>
                            </table>

                            #*<table class="table table-bordered article-table" style="margin-bottom: 0px;">
                                <tr>
                                    <th>提醒频次:</th>
                                    <td style="width: 100px">
                                        <input type="text" id="alertFreq" name="alertFreq" class="form-control" data-rule="integer; range[1~]" placeholder="" ms-duplex="alertFreq">
                                    </td>
                                    <td>
                                        <label class="form-control" style="border: none">分钟/次 <font color="red">(*系统提醒)</font></label>
                                    </td>
                                </tr>
                            </table>*#

                            <table class="table table-bordered article-table" style="margin-bottom: 0px;">
                                <tr>
                                    <th>更新频次:</th>
                                    <td style="width: 70px;">
                                         <label class="form-control" style="border: none" ms-visible="taskType=='article' || taskType=='publicinfo'">少于</label>
                                        <label class="form-control" style="border: none" ms-visible="taskType=='guest'">大于</label>
                                    </td>
                                    <td style="width: 100px">
                                        <input type="text" id="columnUpdateNum" class="form-control" name="columnUpdateNum" data-rule="更新频次:required;integer; range[1~]" placeholder="" ms-duplex="columnUpdateNum">
                                    </td>
                                    <td>
                                        <label class="form-control dn" style="border: none" ms-visible="taskType=='article' || taskType=='publicinfo'">篇</label>
                                        <label class="form-control dn" style="border: none;margin: 0" ms-visible="taskType=='guest'"> 天未回复留言</font></label>
                                    </td>
                                </tr>
                            </table>

                            <table class="table table-bordered article-table" style="margin-bottom: 0px;">
                                <tr>
                                    <td valign="top" align="right" width="115">选择栏目:</td>
                                    <td>
                                         <textarea id="column_select" class="form-control" rows="5" onclick="columnSelect()"
                                                   placeholder="点击选择栏目"></textarea>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</body>
#parse("_page_layout/_footer.vm")
<script>
    mini.parse();
    var cur = {
        vm_id: "task_edit_form",
        form: $('#task_edit_form'),
        api:Ls.getWin.api,
        win: Ls.getWin.win,
        dialog: Ls.getWin.dialog,
        type:Ls.getWin.dialog.data("type"),
        columns:$("#column_select"),
        autoCron:$("#cronExpress"),
        taskType:$("#taskType")
    };

    $(document).ready(function () {
        cur.api.button(
            {id:'save',className:'btn-save',focus:true,name:'保存',callback:function(){saveData();return false;}},
            {id:'back',className:'btn-back',name:'取消',callback:function(){cancel();return false;}}
        );

        getAutoCronModel();
        getTaskType();
    })

    function autoSetModel(mode) {
        if (cur.type == "add") {
            cur.model = Ls.initFORM(cur.vm_id, {
                taskType:'article',
                timeMode:'day',
                msgAlert:false
            });
            setData(cur.model);
        } else {
            cur.model = Ls.getWin.dialog.data("record");
            if(cur.model.msgAlert == 0) {
                cur.model.msgAlert = false;
            } else {
                cur.model.msgAlert = true;
            }
            Ls.ajax({
                url: "/column/update/getCronConf?dataFlag=0",
                data: {
                    cronId:cur.model.cronId
                },
                success: function (resp) {
                    if(resp.status == 1) {
                        var data = resp.data;
                        cur.model.startDate = data.startDate;
                        cur.model.spaceOfDay = data.spaceOfDay;
                        if(mode == null) {
                            cur.model.timeMode = data.timeMode;
                        } else {
                            cur.model.timeMode = mode;
                        }
                        cur.cronConf = data;
                        cur.autoCron.val(data.cronExpress);
                    }
                    setData(cur.model);
                }
            });
        }
        $("#column_select").val(cur.model.columnNames);
    }

    function setData(obj) {
        cur.vm = avalon.vmodels[cur.vm_id];
        data = obj;
        if (cur.vm) {
            Ls.assignVM(cur.vm, data);
        } else {
            data.$id = cur.vm_id;
            cur.vm = avalon.define(data);
        }
        avalon.scan($("#" + cur.vm_id).get(0), cur.vm);
    }

    function columnSelect() {
        cur.dialog.data("taskType",cur.vm.taskType);
        cur.dialog.data("columnIds",cur.vm.columnIds);
        cur.dialog.data("cSiteIds",cur.vm.cSiteIds);
        var url = "/column/update/columnSelect";
        var title = "栏目选择";
        if(cur.vm.taskType == "publicinfo") {
            url = "/column/update/publicInfoSelect";
            title = "信息公开选择";
        }
        Ls.openWin(url, '500px', '500px', {
            id:"column_select",
            title: title
        });
    }

    function column_callback(columnIds,cSiteIds,names) {
        cur.vm.columnIds = columnIds;
        cur.vm.cSiteIds = cSiteIds;
        cur.columns.val(names);
    }

    function public_callback(columnIds,cSiteIds,names,publicNames,publicTypes,organIds) {
        cur.vm.columnIds = columnIds;
        cur.vm.cSiteIds = cSiteIds;
        cur.columns.val(names);
        cur.vm.publicNames = publicNames;
        cur.vm.publicTypes = publicTypes;
        cur.vm.organIds = organIds;
    }

    function saveData() {
        if(cur.vm.timeMode == 'day') {
            $('#startDate').attr("data-rule","开始时间:required;startDate");
            $('#spaceOfDay').attr("data-rule","间隔:required;spaceOfDay");
        } else {
            $('#startDate').remove("data-rule");
            $('#spaceOfDay').remove("data-rule");
        }

        if (!cur.form.isValid()) {
            return;
        }

        if (cur.type == 'add') {
            url = "/column/update/saveTask"
        } else {
            url = "/column/update/updateTask"
        }

        Ls.ajax({
            url: url,
            data: {
                //栏目更新任务配置
                id: cur.vm.id,
                cronId:cur.vm.cronId,
                taskType:cur.taskType.val(),
                taskName: cur.vm.taskName,
                columnIds:cur.vm.columnIds,//需要更新的栏目
                cSiteIds:cur.vm.cSiteIds,//需要更新的栏目
                publicNames:cur.vm.publicNames, //信息公开名称
                publicTypes:cur.vm.publicTypes,//信息公开类型
                organIds:cur.vm.organIds,//信息公开单位
//                msgAlert:cur.vm.msgAlert?1:0,//是否开通短信提醒
//                alertFreq:cur.vm.alertFreq,//系统提醒频次
                cronDesc:getCronDesc(),
                columnUpdateNum:cur.vm.columnUpdateNum,//栏目最少更新数
                //cron表达式配置
                timeMode:cur.vm.timeMode,//定时方式
                startDate:$("#startDate").val(),
                cronExpress:cur.autoCron.val(),
                spaceOfDay:cur.vm.spaceOfDay//定时间隔（天、周）
            },
            success: function (resp) {
                if (resp.status == '1') {
                    cur.win.callback(cur.type == 'add' ? "添加成功!" : "更新成功!");
                    Ls.winClose();
                } else {
                    Ls.tips(resp.desc, {icons:'error',times: 2});
                }
            }
        });
    }

    function getCronDesc() {
        if(cur.vm.timeMode == "day") {
            return "每隔" + cur.vm.spaceOfDay + "天执行";
        } else if(cur.vm.timeMode == "auto"){
            return cur.autoCron.find("option:selected").text();;
        }
    }

    function changeMode(mode) {
        cur.autoCron.val("");
        $("#spaceOfDay").val("");
        if(mode == cur.model.timeMode) {
            autoSetModel(mode);
        }
    }

    function cancel() {
        Ls.winClose();
    }

    function getTaskType() {
        Ls.ajaxGet({
            url: "/column/update/getTaskType",
        }).done(function (response) {
            var str = '<option value=""> 选择任务类型 </option> ';
            if (response != null) {
                var data = response;
                var length = data.length;
                if (length > 0) {
                    for (i = 0; i < length; i++) {
                        str += ' <option value="' + data[i].value + '">' + data[i].key + '</option> '
                    }
                }
            }
//            str += '<option value="publicinfo"> 信息公开 </option> ';
            cur.taskType.append(str);
        });
    }

    function getAutoCronModel() {

        Ls.ajaxGet({
            url: "/column/update/getAutoCron",
        }).done(function (response) {
            var str = '<option value=""> 选择自定义CRON </option> ';
            if (response != null) {
                var data = response;
                var length = data.length;
                if (length > 0) {
                    for (i = 0; i < length; i++) {
                        str += ' <option value="' + data[i].value + '">' + data[i].key + '</option> '
                    }
                }
            }
            cur.autoCron.append(str);
            autoSetModel();
        });
    }

</script>