#parse("_page_layout/_header.vm")
<body class="page-body-white">
<div class="portlet light">
    <div class="portlet-body form">

        <form role="form" id="recForm" ms-controller="recForm">
            <table class="table table-bordered petition-table">
                <tbody>
                <tr id="status" style="display: none">
                  <th>当前状态：</th>
                  <td colspan="2" ms-text="statusName">
                  </td>
                </tr>
                <tr>
                  <th>办理状态：</th>
                  <td>
                      #foreach($s in $statusList)
                        <label class="radio-inline">
                          <input type="radio" name="dealStatus" ms-duplex-string="dealStatus" value="$!{s.statusCode}"/> $!{s.statusName}
                        </label>
                      #end
                  </td>
                </tr>
                <tr>
                    <th style="vertical-align: top;">内容：</th>
                    <td colspan="2">
                        <textarea id="replyContent" name="replyContent" ms-duplex="replyContent" class="form-control"
                                  style="width: 100%; visibility:visible ;height:200px"></textarea>
                    </td>
                </tr>
                <tr class="hide">
                    <th>附件：</th>
                    <td colspan="2">
                        <textarea id="video_content" name="attachId" ms-duplex="attachId" class="form-control"></textarea>
                    </td>
                </tr>
                <tr>
                    <th>附件：</th>
                    <td colspan="2">
                        <div class="form-group">
                            <div class="input-group">
                                <input type="text" id="attachName" name="attachName" ms-duplex="attachName" class="form-control">

                                <div class="input-group-btn">
                                    <button class="btn btn-default btn-default-upload" type="button" onclick="uploadAttachment()">上传
                                        <i class="fa fa-cloud-upload"></i>
                                    </button>
                                </div>
                                <!-- /btn-group -->
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>回复日期：</th>
                    <td>
                        <input type="datetime" name="replyDate" ms-duplex="replyDate" class="form-control"
                               onClick="WdatePicker({dateFmt:'yyyy-MM-dd HH:mm:ss',readOnly:true})" readonly/>
                </tr>
                </tbody>
            </table>
        </form>
    </div>
</div>
    #parse("_page_layout/_footer.vm")
<script>
    var petitionId = "${petitionId}";
    var columnId = "${columnId}";
    var replyId = "${replyId}";
    var parent = Ls.getWin.win;
    var siteId = parent.GLOBAL_SITEID;
    var curr = {
        vm: {},
    }
    var eweb;

    $(document).ready(function () {
        eweb = Ls.editor("replyContent", {style: "Lmini"});
        /*editor = KindEditor.create('textarea[name="replyContent"]', {
            resizeType: 1,
            allowPreviewEmoticons: false,
            allowImageUpload: false,
            items: [
                'forecolor', 'hilitecolor', 'bold', 'italic', 'underline'],
            afterCreate: function () {
                this.sync();
            },
            afterBlur: function () {
                this.sync();
            },
            filterMode: true
        });*/

        getPetitionRecVO();
        var dialog = art.dialog,
            api = art.dialog.open.api;
        if (!api) return;
        // 操作对话框
        api.button(
          {
            name: '保存',
            id: 'saveBtn',
            focus: true,
            callback: function () {
	       eweb.update();
              $("form").submit();
              return false;
            }
          }, {
                id: 'backIt',
                name: '返回',
                callback: function () {
                  art.dialog.close();
                }
            }
        );
        doSubmit();
    });
    function getPetitionRecVO() {
        var id = curr.vm.id;
        Ls.ajax({
            url: "/petitionRec/getRecVO",
            data: {id: replyId,columnId:columnId}
        }).done(function (text) {
            data = text;
            curr.$id = "recForm";
            //初始化表单字段
            curr.init = Ls.initFORM(curr.$id, data);
            //如果模型已经绑定，不再绑定
            curr.vm = avalon.vmodels[curr.$id];
            if (!curr.vm) {
                curr.vm = avalon.define(curr.init);
            } else {
                Ls.assignVM(curr.vm, data);
            }
           // avalon.scan(document.body, curr.vm);
            avalon.scan($("#recForm").get(0),curr.vm);
            if (text.replyContent != null) {
                /*editor.html(text.replyContent);*/
                eweb.setHtml(text.replyContent);
            }
            if (!Ls.isEmpty(text.statusName)) {
                $("#status").show();
            }
        });
    }


    function doSubmit() {
        $('#recForm').validator({
            /*  rules: {
             mobile: [/^1[3458]\d{9}$/, '请检查手机号格式']
             },*/
            fields: {
                'status': '回复状态:required;',
                'replyDate': '回复时间:required;'
            },
            valid: function () {
                saveEO();
            }
        });
    }

    function saveEO() {
        /*curr.vm.replyContent = editor.html();*/
        curr.vm.replyContent = eweb.getHtml();
        if ($("#replyContent").val() == '') {
            Ls.tipsInfo("回复内容不能为空");
            return;
        }
        curr.vm.petitionId = petitionId;
        var value = curr.vm.$model;
        value = Ls.toJSON(value);
        Ls.ajax({
            url: "/petitionRec/saveReply",
            data: value
        }).done(function (text) {
          if(!text.status){
            Ls.tips(text.data,{icons:"error"});
            return;
          }else{
            Ls.tipsOk("保存成功");
            parent.searchClear();
            art.dialog.close();
            return;
          }
        });
    }
    function doCancle() {
        art.dialog.close();
    }
    function uploadAttachment() {
        Ls.uploadFile(function (filePath) {
            if (filePath != '') {
                var serverData = filePath[0];
                curr.vm.attachId = filePath[0].fileName;
                curr.vm.attachName = filePath[0].fileName;
            }
            return true;
        }, {
            lock: true,
            title: '上传附件',
            file_size_limit: "20 MB",
            file_types: "*.zip;*.rar;*.doc;*.docx;*.xls;*.xlsx;*.ppt;*.pptx;*.txt;*.jpg;*.gif;*.bmp;*.pdf",
            file_upload_limit: 1,  //配置上传个数
            post_params: {
            "type":"NotDefined"
            }
        });
    }

</script>
</body>
</html>